(program [0, 0] - [54, 0]
  (comment [0, 0] - [2, 3])
  (comment [4, 0] - [4, 44])
  (lexical_declaration [5, 0] - [5, 22]
    (variable_declarator [5, 6] - [5, 21]
      name: (identifier [5, 6] - [5, 15])
      value: (number [5, 18] - [5, 21])))
  (lexical_declaration [6, 0] - [6, 20]
    (variable_declarator [6, 4] - [6, 19]
      name: (identifier [6, 4] - [6, 12])
      value: (true [6, 15] - [6, 19])))
  (variable_declaration [7, 0] - [7, 20]
    (variable_declarator [7, 4] - [7, 19]
      name: (identifier [7, 4] - [7, 12])
      value: (null [7, 15] - [7, 19])))
  (comment [9, 0] - [9, 23])
  (function_declaration [10, 0] - [25, 1]
    name: (identifier [10, 9] - [10, 22])
    parameters: (formal_parameters [10, 22] - [10, 37]
      (identifier [10, 23] - [10, 28])
      (identifier [10, 30] - [10, 36]))
    body: (statement_block [10, 38] - [25, 1]
      (comment [11, 2] - [11, 33])
      (lexical_declaration [12, 2] - [12, 32]
        (variable_declarator [12, 8] - [12, 31]
          name: (identifier [12, 8] - [12, 14])
          value: (binary_expression [12, 17] - [12, 31]
            left: (identifier [12, 17] - [12, 22])
            right: (identifier [12, 25] - [12, 31]))))
      (comment [14, 2] - [14, 31])
      (if_statement [15, 2] - [19, 3]
        condition: (parenthesized_expression [15, 5] - [15, 25]
          (binary_expression [15, 6] - [15, 24]
            left: (identifier [15, 6] - [15, 12])
            right: (identifier [15, 15] - [15, 24])))
        consequence: (statement_block [15, 26] - [17, 3]
          (return_statement [16, 4] - [16, 23]
            (string [16, 11] - [16, 22]
              (string_fragment [16, 12] - [16, 21])))
          (comment [16, 24] - [16, 41]))
        alternative: (else_clause [17, 4] - [19, 3]
          (if_statement [17, 9] - [19, 3]
            condition: (parenthesized_expression [17, 12] - [17, 26]
              (binary_expression [17, 13] - [17, 25]
                left: (identifier [17, 13] - [17, 19])
                right: (number [17, 24] - [17, 25])))
            consequence: (statement_block [17, 27] - [19, 3]
              (return_statement [18, 4] - [18, 13]
                (number [18, 11] - [18, 12]))
              (comment [18, 14] - [18, 32])))))
      (comment [21, 2] - [21, 51])
      (expression_statement [22, 2] - [22, 44]
        (call_expression [22, 2] - [22, 43]
          function: (member_expression [22, 2] - [22, 13]
            object: (identifier [22, 2] - [22, 9])
            property: (property_identifier [22, 10] - [22, 13]))
          arguments: (arguments [22, 13] - [22, 43]
            (template_string [22, 14] - [22, 42]
              (string_fragment [22, 15] - [22, 32])
              (template_substitution [22, 32] - [22, 41]
                (identifier [22, 34] - [22, 40]))))))
      (comment [22, 45] - [22, 63])
      (return_statement [24, 2] - [24, 16]
        (identifier [24, 9] - [24, 15]))))
  (comment [27, 0] - [27, 26])
  (class_declaration [28, 0] - [39, 1]
    name: (identifier [28, 6] - [28, 15])
    body: (class_body [28, 16] - [39, 1]
      member: (method_definition [29, 2] - [33, 3]
        name: (property_identifier [29, 2] - [29, 13])
        parameters: (formal_parameters [29, 13] - [29, 19]
          (identifier [29, 14] - [29, 15])
          (identifier [29, 17] - [29, 18]))
        body: (statement_block [29, 20] - [33, 3]
          (comment [30, 4] - [30, 47])
          (expression_statement [31, 4] - [31, 19]
            (assignment_expression [31, 4] - [31, 18]
              left: (member_expression [31, 4] - [31, 14]
                object: (this [31, 4] - [31, 8])
                property: (property_identifier [31, 9] - [31, 14]))
              right: (identifier [31, 17] - [31, 18])))
          (expression_statement [32, 4] - [32, 20]
            (assignment_expression [32, 4] - [32, 19]
              left: (member_expression [32, 4] - [32, 15]
                object: (this [32, 4] - [32, 8])
                property: (property_identifier [32, 9] - [32, 15]))
              right: (identifier [32, 18] - [32, 19])))))
      (comment [35, 2] - [35, 40])
      member: (method_definition [36, 2] - [38, 3]
        name: (property_identifier [36, 2] - [36, 9])
        parameters: (formal_parameters [36, 9] - [36, 11])
        body: (statement_block [36, 12] - [38, 3]
          (return_statement [37, 4] - [37, 50]
            (call_expression [37, 11] - [37, 49]
              function: (identifier [37, 11] - [37, 24])
              arguments: (arguments [37, 24] - [37, 49]
                (member_expression [37, 25] - [37, 35]
                  object: (this [37, 25] - [37, 29])
                  property: (property_identifier [37, 30] - [37, 35]))
                (member_expression [37, 37] - [37, 48]
                  object: (this [37, 37] - [37, 41])
                  property: (property_identifier [37, 42] - [37, 48])))))))))
  (comment [41, 0] - [41, 27])
  (lexical_declaration [42, 0] - [42, 34]
    (variable_declarator [42, 6] - [42, 33]
      name: (identifier [42, 6] - [42, 10])
      value: (new_expression [42, 13] - [42, 33]
        constructor: (identifier [42, 17] - [42, 26])
        arguments: (arguments [42, 26] - [42, 33]
          (number [42, 27] - [42, 28])
          (number [42, 30] - [42, 32])))))
  (lexical_declaration [43, 0] - [43, 26]
    (variable_declarator [43, 4] - [43, 25]
      name: (identifier [43, 4] - [43, 8])
      value: (call_expression [43, 11] - [43, 25]
        function: (member_expression [43, 11] - [43, 23]
          object: (identifier [43, 11] - [43, 15])
          property: (property_identifier [43, 16] - [43, 23]))
        arguments: (arguments [43, 23] - [43, 25]))))
  (comment [45, 0] - [45, 32])
  (for_statement [46, 0] - [50, 1]
    initializer: (lexical_declaration [46, 5] - [46, 15]
      (variable_declarator [46, 9] - [46, 14]
        name: (identifier [46, 9] - [46, 10])
        value: (number [46, 13] - [46, 14])))
    condition: (binary_expression [46, 16] - [46, 21]
      left: (identifier [46, 16] - [46, 17])
      right: (number [46, 20] - [46, 21]))
    increment: (update_expression [46, 23] - [46, 26]
      argument: (identifier [46, 23] - [46, 24]))
    body: (statement_block [46, 28] - [50, 1]
      (comment [47, 2] - [47, 23])
      (lexical_declaration [48, 2] - [48, 33]
        (variable_declarator [48, 6] - [48, 32]
          name: (identifier [48, 6] - [48, 13])
          value: (template_string [48, 16] - [48, 32]
            (string_fragment [48, 17] - [48, 27])
            (template_substitution [48, 27] - [48, 31]
              (identifier [48, 29] - [48, 30])))))
      (expression_statement [49, 2] - [49, 23]
        (call_expression [49, 2] - [49, 22]
          function: (member_expression [49, 2] - [49, 13]
            object: (identifier [49, 2] - [49, 9])
            property: (property_identifier [49, 10] - [49, 13]))
          arguments: (arguments [49, 13] - [49, 22]
            (identifier [49, 14] - [49, 21]))))))
  (comment [52, 0] - [52, 34])
  (lexical_declaration [53, 0] - [53, 33]
    (variable_declarator [53, 6] - [53, 32]
      name: (identifier [53, 6] - [53, 14])
      value: (arrow_function [53, 17] - [53, 32]
        parameters: (formal_parameters [53, 17] - [53, 23]
          (identifier [53, 18] - [53, 19])
          (identifier [53, 21] - [53, 22]))
        body: (binary_expression [53, 27] - [53, 32]
          left: (identifier [53, 27] - [53, 28])
          right: (identifier [53, 31] - [53, 32]))))))
